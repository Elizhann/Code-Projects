#   this is a program that creates a GUI to take an input text file
#   perform basic text processing and write the results to an output text file
#   3/9/19: re-written with grid formatting

import tkinter
import string

#   defines class to read file
class TextProcessor:
    #   global variables for word lists
    words_list = []
    stopwords_list = []

    # defines GUI design
    def __init__(self, window):
        self.window = window
        window.title('Text Processor')
        window.configure(bg = 'ivory')
        window.iconbitmap('mlogo_NxJ_icon.ico')

        #   defines input entry
        self.input_file_label = tkinter.Label(text = 'Enter Input File Name: ', font = "Serif 9 bold", bg = 'ivory')
        self.input_file_entry = tkinter.Entry(font = "Serif 8")
        self.input_file_label.grid(row = 0, column = 0, sticky = 'W')
        self.input_file_entry.grid(row = 0, column = 1, sticky = 'E')

        #   defines output entry

        self.output_file_label = tkinter.Label(text = 'Enter Output File Name: ', font = "Serif 9 bold", bg = 'ivory')
        self.output_file_entry = tkinter.Entry(font = "Serif 8")
        self.output_file_label.grid(row = 1, column = 0, sticky = 'W')
        self.output_file_entry.grid(row = 1, column = 1, sticky = 'E')


        #   defines action buttons
        self.enter_button = tkinter.Button(text = 'Enter', command = self.read_file, font = "Serif 9 bold", bg = 'navy', fg = 'yellow')
        self.exit_button = tkinter.Button(text = 'Quit', command = window.quit, font = "Serif 9 bold", bg = 'navy', fg = 'yellow')
        self.enter_button.grid(row =5, column = 0, sticky = 'E')
        self.exit_button.grid(row = 5, column = 1, sticky = 'W')

        #   returns results message
        self.display_label_text = tkinter.StringVar()
        self.display_label = tkinter.Label(textvariable = self.display_label_text, font = "Serif 8", bg = 'ivory')
        self.status_label = tkinter.Label(text = 'Status: ', font = "Serif 9 bold", bg = 'ivory')
        self.status_label.grid(row = 3, column = 0)
        self.display_label.grid(row = 3, column = 1, sticky = 'W')


    #  defines function to open stopwords file and write to global stopwords list
    def get_stopwords(self):
        stopwords_list = open('stopwords.txt', 'r')
        for lines in stopwords_list:
            lines = lines.rstrip()
            lines = lines.lower()
            self.stopwords_list.append(lines)

    #  defines function to read input file, perform basic text processing
    def read_file(self):
        common_words = self.get_stopwords() #   calls function to get stopwords
        input_filename = self.input_file_entry.get() #   gets input file name

        try:
            openfile = open(input_filename, 'r')

            for lines in openfile:
                lines = lines.rstrip()
                lines = lines.lower()
                lines = lines.translate(lines.maketrans('', '', string.punctuation))
                words = lines.split()
                for word in words:
                    if word in self.stopwords_list:
                        continue
                    if word not in self.words_list:
                        self.words_list.append(word)
            self.display_label_text.set('Processing Complete')
            openfile.close()

            write = self.write_file() #   gets function to write to file

        except FileNotFoundError:
            self.display_label_text.set('File' + ' ' + str(input_filename) + ' ' + 'not found')

    #   defines function to write keywords to output file
    def write_file(self):
        output_filename = self.output_file_entry.get() #   gets output file name
        keywords_file = open(output_filename, 'w')
        keywords_file.write('Keywords:' + '\n')
        for word in self.words_list:
            keywords_file.write(str(word) + '\n' )
        keywords_file.close()

#   calls object for class
root = tkinter.Tk()
read = TextProcessor(root)
root.mainloop()
